package cn.nevertiree.business.dao;

import cn.nevertiree.domain.Usersecurity;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface UsersecurityMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userSecurity
     *
     * @mbggenerated
     */
    @Delete({
        "delete from userSecurity",
        "where no = #{no,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String no);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userSecurity
     *
     * @mbggenerated
     */
    @Insert({
        "insert into userSecurity (no, name, ",
        "pwd, token, ip)",
        "values (#{no,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, ",
        "#{pwd,jdbcType=VARCHAR}, #{token,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR})"
    })
    int insert(Usersecurity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userSecurity
     *
     * @mbggenerated
     */
    int insertSelective(Usersecurity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userSecurity
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "no, name, pwd, token, ip",
        "from userSecurity",
        "where no = #{no,jdbcType=VARCHAR}"
    })
    @ResultMap("BaseResultMap")
    Usersecurity selectByPrimaryKey(String no);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userSecurity
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(Usersecurity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userSecurity
     *
     * @mbggenerated
     */
    @Update({
        "update userSecurity",
        "set name = #{name,jdbcType=VARCHAR},",
          "pwd = #{pwd,jdbcType=VARCHAR},",
          "token = #{token,jdbcType=VARCHAR},",
          "ip = #{ip,jdbcType=VARCHAR}",
        "where no = #{no,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(Usersecurity record);
}